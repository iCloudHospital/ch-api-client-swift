//
// SpecialtyTypeCategoryViewModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct SpecialtyTypeCategoryViewModel: Codable, Hashable {

    public var id: UUID?
    public var name: String?
    public var description: String?
    public var order: Int?
    public var specialtyTypeCount: Int?
    public var specialtyTypes: [SpecialtyTypeItemViewModel]?

    public init(id: UUID? = nil, name: String? = nil, description: String? = nil, order: Int? = nil, specialtyTypeCount: Int? = nil, specialtyTypes: [SpecialtyTypeItemViewModel]? = nil) {
        self.id = id
        self.name = name
        self.description = description
        self.order = order
        self.specialtyTypeCount = specialtyTypeCount
        self.specialtyTypes = specialtyTypes
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case name
        case description
        case order
        case specialtyTypeCount
        case specialtyTypes
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(description, forKey: .description)
        try container.encodeIfPresent(order, forKey: .order)
        try container.encodeIfPresent(specialtyTypeCount, forKey: .specialtyTypeCount)
        try container.encodeIfPresent(specialtyTypes, forKey: .specialtyTypes)
    }
}

