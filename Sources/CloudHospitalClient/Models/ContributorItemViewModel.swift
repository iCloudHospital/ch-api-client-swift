//
// ContributorItemViewModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ContributorItemViewModel: Codable, Hashable {

    public var id: UUID?
    public var name: String?
    public var slug: String?
    public var email: String?
    public var photo: String?
    public var description: String?
    public var website: String?
    public var snsHandles: [SnsHandleViewModel]?

    public init(id: UUID? = nil, name: String? = nil, slug: String? = nil, email: String? = nil, photo: String? = nil, description: String? = nil, website: String? = nil, snsHandles: [SnsHandleViewModel]? = nil) {
        self.id = id
        self.name = name
        self.slug = slug
        self.email = email
        self.photo = photo
        self.description = description
        self.website = website
        self.snsHandles = snsHandles
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case name
        case slug
        case email
        case photo
        case description
        case website
        case snsHandles
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(slug, forKey: .slug)
        try container.encodeIfPresent(email, forKey: .email)
        try container.encodeIfPresent(photo, forKey: .photo)
        try container.encodeIfPresent(description, forKey: .description)
        try container.encodeIfPresent(website, forKey: .website)
        try container.encodeIfPresent(snsHandles, forKey: .snsHandles)
    }
}

