//
// FaqViewModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct FaqViewModel: Codable, Hashable {

    public var id: UUID?
    public var title: String?
    public var slug: String?
    public var content: String?
    public var medias: [MediaViewModel]?
    public var auditableEntity: AuditableEntity?
    public var categories: [FaqCategoryBreadCrumbViewModel]?

    public init(id: UUID? = nil, title: String? = nil, slug: String? = nil, content: String? = nil, medias: [MediaViewModel]? = nil, auditableEntity: AuditableEntity? = nil, categories: [FaqCategoryBreadCrumbViewModel]? = nil) {
        self.id = id
        self.title = title
        self.slug = slug
        self.content = content
        self.medias = medias
        self.auditableEntity = auditableEntity
        self.categories = categories
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case title
        case slug
        case content
        case medias
        case auditableEntity
        case categories
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(title, forKey: .title)
        try container.encodeIfPresent(slug, forKey: .slug)
        try container.encodeIfPresent(content, forKey: .content)
        try container.encodeIfPresent(medias, forKey: .medias)
        try container.encodeIfPresent(auditableEntity, forKey: .auditableEntity)
        try container.encodeIfPresent(categories, forKey: .categories)
    }
}

