//
// DoctorSpecialty.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct DoctorSpecialty: Codable, Hashable {

    public var doctorId: UUID?
    public var doctor: Doctor?
    public var specialtyId: UUID?
    public var specialty: Specialty?
    public var order: Int?

    public init(doctorId: UUID? = nil, doctor: Doctor? = nil, specialtyId: UUID? = nil, specialty: Specialty? = nil, order: Int? = nil) {
        self.doctorId = doctorId
        self.doctor = doctor
        self.specialtyId = specialtyId
        self.specialty = specialty
        self.order = order
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case doctorId
        case doctor
        case specialtyId
        case specialty
        case order
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(doctorId, forKey: .doctorId)
        try container.encodeIfPresent(doctor, forKey: .doctor)
        try container.encodeIfPresent(specialtyId, forKey: .specialtyId)
        try container.encodeIfPresent(specialty, forKey: .specialty)
        try container.encodeIfPresent(order, forKey: .order)
    }
}

