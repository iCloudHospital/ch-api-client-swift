//
// YoutubeTag.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct YoutubeTag: Codable, Hashable {

    public var youtubeId: UUID?
    public var youtube: Youtube?
    public var tagId: String?
    public var tag: Tag?
    public var order: Int?

    public init(youtubeId: UUID? = nil, youtube: Youtube? = nil, tagId: String? = nil, tag: Tag? = nil, order: Int? = nil) {
        self.youtubeId = youtubeId
        self.youtube = youtube
        self.tagId = tagId
        self.tag = tag
        self.order = order
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case youtubeId
        case youtube
        case tagId
        case tag
        case order
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(youtubeId, forKey: .youtubeId)
        try container.encodeIfPresent(youtube, forKey: .youtube)
        try container.encodeIfPresent(tagId, forKey: .tagId)
        try container.encodeIfPresent(tag, forKey: .tag)
        try container.encodeIfPresent(order, forKey: .order)
    }
}

