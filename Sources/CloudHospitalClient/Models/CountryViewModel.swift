//
// CountryViewModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct CountryViewModel: Codable, Hashable {

    public var id: UUID?
    public var name: String?
    public var logo: String?
    public var slug: String?
    public var description: String?
    public var content: String?
    public var hospitalsCount: Int?
    public var doctorsCount: Int?
    public var specialitiesCount: Int?
    public var packagesCount: Int?
    public var articlesCount: Int?
    public var medias: [MediaViewModel]?
    public var auditableEntity: AuditableEntity?

    public init(id: UUID? = nil, name: String? = nil, logo: String? = nil, slug: String? = nil, description: String? = nil, content: String? = nil, hospitalsCount: Int? = nil, doctorsCount: Int? = nil, specialitiesCount: Int? = nil, packagesCount: Int? = nil, articlesCount: Int? = nil, medias: [MediaViewModel]? = nil, auditableEntity: AuditableEntity? = nil) {
        self.id = id
        self.name = name
        self.logo = logo
        self.slug = slug
        self.description = description
        self.content = content
        self.hospitalsCount = hospitalsCount
        self.doctorsCount = doctorsCount
        self.specialitiesCount = specialitiesCount
        self.packagesCount = packagesCount
        self.articlesCount = articlesCount
        self.medias = medias
        self.auditableEntity = auditableEntity
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case name
        case logo
        case slug
        case description
        case content
        case hospitalsCount
        case doctorsCount
        case specialitiesCount
        case packagesCount
        case articlesCount
        case medias
        case auditableEntity
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(logo, forKey: .logo)
        try container.encodeIfPresent(slug, forKey: .slug)
        try container.encodeIfPresent(description, forKey: .description)
        try container.encodeIfPresent(content, forKey: .content)
        try container.encodeIfPresent(hospitalsCount, forKey: .hospitalsCount)
        try container.encodeIfPresent(doctorsCount, forKey: .doctorsCount)
        try container.encodeIfPresent(specialitiesCount, forKey: .specialitiesCount)
        try container.encodeIfPresent(packagesCount, forKey: .packagesCount)
        try container.encodeIfPresent(articlesCount, forKey: .articlesCount)
        try container.encodeIfPresent(medias, forKey: .medias)
        try container.encodeIfPresent(auditableEntity, forKey: .auditableEntity)
    }
}

