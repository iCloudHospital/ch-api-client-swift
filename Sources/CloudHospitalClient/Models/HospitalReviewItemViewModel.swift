//
// HospitalReviewItemViewModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct HospitalReviewItemViewModel: Codable, Hashable {

    public var patientId: UUID?
    public var patientName: String?
    public var hospitalId: UUID?
    public var hospitalName: String?
    public var body: String?
    public var recommended: Bool?
    public var reviewCategory: ReviewCategory?
    public var rate: Int?

    public init(patientId: UUID? = nil, patientName: String? = nil, hospitalId: UUID? = nil, hospitalName: String? = nil, body: String? = nil, recommended: Bool? = nil, reviewCategory: ReviewCategory? = nil, rate: Int? = nil) {
        self.patientId = patientId
        self.patientName = patientName
        self.hospitalId = hospitalId
        self.hospitalName = hospitalName
        self.body = body
        self.recommended = recommended
        self.reviewCategory = reviewCategory
        self.rate = rate
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case patientId
        case patientName
        case hospitalId
        case hospitalName
        case body
        case recommended
        case reviewCategory
        case rate
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(patientId, forKey: .patientId)
        try container.encodeIfPresent(patientName, forKey: .patientName)
        try container.encodeIfPresent(hospitalId, forKey: .hospitalId)
        try container.encodeIfPresent(hospitalName, forKey: .hospitalName)
        try container.encodeIfPresent(body, forKey: .body)
        try container.encodeIfPresent(recommended, forKey: .recommended)
        try container.encodeIfPresent(reviewCategory, forKey: .reviewCategory)
        try container.encodeIfPresent(rate, forKey: .rate)
    }
}

