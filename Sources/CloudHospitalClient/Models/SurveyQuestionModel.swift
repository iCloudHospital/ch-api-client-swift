//
// SurveyQuestionModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct SurveyQuestionModel: Codable, Hashable {

    public var question: String?
    public var placeholder: String?
    public var controlType: ControlType?
    public var controlSource: String?
    public var isRequried: Bool?
    public var displayZone: String?
    public var displayOrder: Int?

    public init(question: String? = nil, placeholder: String? = nil, controlType: ControlType? = nil, controlSource: String? = nil, isRequried: Bool? = nil, displayZone: String? = nil, displayOrder: Int? = nil) {
        self.question = question
        self.placeholder = placeholder
        self.controlType = controlType
        self.controlSource = controlSource
        self.isRequried = isRequried
        self.displayZone = displayZone
        self.displayOrder = displayOrder
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case question
        case placeholder
        case controlType
        case controlSource
        case isRequried
        case displayZone
        case displayOrder
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(question, forKey: .question)
        try container.encodeIfPresent(placeholder, forKey: .placeholder)
        try container.encodeIfPresent(controlType, forKey: .controlType)
        try container.encodeIfPresent(controlSource, forKey: .controlSource)
        try container.encodeIfPresent(isRequried, forKey: .isRequried)
        try container.encodeIfPresent(displayZone, forKey: .displayZone)
        try container.encodeIfPresent(displayOrder, forKey: .displayOrder)
    }
}

