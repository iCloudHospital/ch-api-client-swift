//
// ArticleContributor.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ArticleContributor: Codable, Hashable {

    public var articleId: UUID?
    public var article: Article?
    public var contributorId: UUID?
    public var contributor: Contributor?
    public var type: ContributionType?
    public var filter: String?
    public var order: Int?

    public init(articleId: UUID? = nil, article: Article? = nil, contributorId: UUID? = nil, contributor: Contributor? = nil, type: ContributionType? = nil, filter: String? = nil, order: Int? = nil) {
        self.articleId = articleId
        self.article = article
        self.contributorId = contributorId
        self.contributor = contributor
        self.type = type
        self.filter = filter
        self.order = order
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case articleId
        case article
        case contributorId
        case contributor
        case type
        case filter
        case order
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(articleId, forKey: .articleId)
        try container.encodeIfPresent(article, forKey: .article)
        try container.encodeIfPresent(contributorId, forKey: .contributorId)
        try container.encodeIfPresent(contributor, forKey: .contributor)
        try container.encodeIfPresent(type, forKey: .type)
        try container.encodeIfPresent(filter, forKey: .filter)
        try container.encodeIfPresent(order, forKey: .order)
    }
}

