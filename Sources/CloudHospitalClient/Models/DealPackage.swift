//
// DealPackage.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct DealPackage: Codable, Hashable {

    public var id: UUID?
    public var dealId: UUID?
    public var deal: Deal?
    public var refundPolicy: RefundPolicy?
    public var additionalServices: String?
    public var accomodation: String?
    public var transfer: String?
    public var bonus: String?
    public var price: Double?
    public var managers: [Manager]?
    public var questions: [Question]?
    public var bookings: [Booking]?
    public var auditableEntity: AuditableEntity?

    public init(id: UUID? = nil, dealId: UUID? = nil, deal: Deal? = nil, refundPolicy: RefundPolicy? = nil, additionalServices: String? = nil, accomodation: String? = nil, transfer: String? = nil, bonus: String? = nil, price: Double? = nil, managers: [Manager]? = nil, questions: [Question]? = nil, bookings: [Booking]? = nil, auditableEntity: AuditableEntity? = nil) {
        self.id = id
        self.dealId = dealId
        self.deal = deal
        self.refundPolicy = refundPolicy
        self.additionalServices = additionalServices
        self.accomodation = accomodation
        self.transfer = transfer
        self.bonus = bonus
        self.price = price
        self.managers = managers
        self.questions = questions
        self.bookings = bookings
        self.auditableEntity = auditableEntity
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case dealId
        case deal
        case refundPolicy
        case additionalServices
        case accomodation
        case transfer
        case bonus
        case price
        case managers
        case questions
        case bookings
        case auditableEntity
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(dealId, forKey: .dealId)
        try container.encodeIfPresent(deal, forKey: .deal)
        try container.encodeIfPresent(refundPolicy, forKey: .refundPolicy)
        try container.encodeIfPresent(additionalServices, forKey: .additionalServices)
        try container.encodeIfPresent(accomodation, forKey: .accomodation)
        try container.encodeIfPresent(transfer, forKey: .transfer)
        try container.encodeIfPresent(bonus, forKey: .bonus)
        try container.encodeIfPresent(price, forKey: .price)
        try container.encodeIfPresent(managers, forKey: .managers)
        try container.encodeIfPresent(questions, forKey: .questions)
        try container.encodeIfPresent(bookings, forKey: .bookings)
        try container.encodeIfPresent(auditableEntity, forKey: .auditableEntity)
    }
}

