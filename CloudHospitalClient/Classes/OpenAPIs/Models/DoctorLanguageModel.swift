//
// DoctorLanguageModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct DoctorLanguageModel: Codable, JSONEncodable, Hashable {

    public var id: UUID?
    public var language: String?
    public var userId: UUID?

    public init(id: UUID? = nil, language: String? = nil, userId: UUID? = nil) {
        self.id = id
        self.language = language
        self.userId = userId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case language
        case userId
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(language, forKey: .language)
        try container.encodeIfPresent(userId, forKey: .userId)
    }
}

