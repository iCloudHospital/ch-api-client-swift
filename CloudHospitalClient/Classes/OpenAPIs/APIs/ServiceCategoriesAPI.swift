//
// ServiceCategoriesAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

extension CloudHospitalClientAPI {


open class ServiceCategoriesAPI {
    /**
     Get all ServiceCategories.
     
     - parameter id: (query)  (optional)
     - parameter name: (query)  (optional)
     - parameter description: (query)  (optional)
     - parameter page: (query)  (optional)
     - parameter limit: (query)  (optional)
     - parameter lastRetrieved: (query)  (optional)
     - parameter current: (query)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiV1ServicecategoriesGet(id: UUID? = nil, name: String? = nil, description: String? = nil, page: Int? = nil, limit: Int? = nil, lastRetrieved: Date? = nil, current: Bool? = nil, apiResponseQueue: DispatchQueue = CloudHospitalClientAPI.apiResponseQueue, completion: @escaping ((_ data: ServiceCategoriesViewModel?,_ error: Error?) -> Void)) {
        apiV1ServicecategoriesGetWithRequestBuilder(id: id, name: name, description: description, page: page, limit: limit, lastRetrieved: lastRetrieved, current: current).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get all ServiceCategories.
     - GET /api/v1/servicecategories
     - Sample request:        GET /api/v1/ServiceCategories
     - parameter id: (query)  (optional)
     - parameter name: (query)  (optional)
     - parameter description: (query)  (optional)
     - parameter page: (query)  (optional)
     - parameter limit: (query)  (optional)
     - parameter lastRetrieved: (query)  (optional)
     - parameter current: (query)  (optional)
     - returns: RequestBuilder<ServiceCategoriesViewModel> 
     */
    open class func apiV1ServicecategoriesGetWithRequestBuilder(id: UUID? = nil, name: String? = nil, description: String? = nil, page: Int? = nil, limit: Int? = nil, lastRetrieved: Date? = nil, current: Bool? = nil) -> RequestBuilder<ServiceCategoriesViewModel> {
        let path = "/api/v1/servicecategories"
        let URLString = CloudHospitalClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "Id": id?.encodeToJSON(), 
            "Name": name?.encodeToJSON(), 
            "Description": description?.encodeToJSON(), 
            "page": page?.encodeToJSON(), 
            "limit": limit?.encodeToJSON(), 
            "lastRetrieved": lastRetrieved?.encodeToJSON(), 
            "Current": current?.encodeToJSON()
        ])

        let requestBuilder: RequestBuilder<ServiceCategoriesViewModel>.Type = CloudHospitalClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Create ServiceCategory.
     
     - parameter createServiceCategoryCommand: (body)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiV1ServicecategoriesPost(createServiceCategoryCommand: CreateServiceCategoryCommand? = nil, apiResponseQueue: DispatchQueue = CloudHospitalClientAPI.apiResponseQueue, completion: @escaping ((_ data: UUID?,_ error: Error?) -> Void)) {
        apiV1ServicecategoriesPostWithRequestBuilder(createServiceCategoryCommand: createServiceCategoryCommand).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Create ServiceCategory.
     - POST /api/v1/servicecategories
     - Sample request:        POST /api/v1/ServiceCategories      {          \"name\": \"Adults\",          \"description\": \"There are so many “-ologists“ that they can be hard to keep straight. However, this list could be a handy reference. This is not meant to be an exhaustive and all-inclusive list of what a specialist does, but it should provide you with a basic overview.\"      }
     - OAuth:
       - type: oauth2
       - name: oauth2
     - parameter createServiceCategoryCommand: (body)  (optional)
     - returns: RequestBuilder<UUID> 
     */
    open class func apiV1ServicecategoriesPostWithRequestBuilder(createServiceCategoryCommand: CreateServiceCategoryCommand? = nil) -> RequestBuilder<UUID> {
        let path = "/api/v1/servicecategories"
        let URLString = CloudHospitalClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: createServiceCategoryCommand)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<UUID>.Type = CloudHospitalClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Delete ServiceCategory.
     
     - parameter serviceCategoryId: (path)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiV1ServicecategoriesServiceCategoryIdDelete(serviceCategoryId: UUID, apiResponseQueue: DispatchQueue = CloudHospitalClientAPI.apiResponseQueue, completion: @escaping ((_ data: Bool?,_ error: Error?) -> Void)) {
        apiV1ServicecategoriesServiceCategoryIdDeleteWithRequestBuilder(serviceCategoryId: serviceCategoryId).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Delete ServiceCategory.
     - DELETE /api/v1/servicecategories/{serviceCategoryId}
     - Sample request:        DELETE /api/v1/ServiceCategories/1
     - OAuth:
       - type: oauth2
       - name: oauth2
     - parameter serviceCategoryId: (path)  
     - returns: RequestBuilder<Bool> 
     */
    open class func apiV1ServicecategoriesServiceCategoryIdDeleteWithRequestBuilder(serviceCategoryId: UUID) -> RequestBuilder<Bool> {
        var path = "/api/v1/servicecategories/{serviceCategoryId}"
        let serviceCategoryIdPreEscape = "\(APIHelper.mapValueToPathItem(serviceCategoryId))"
        let serviceCategoryIdPostEscape = serviceCategoryIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{serviceCategoryId}", with: serviceCategoryIdPostEscape, options: .literal, range: nil)
        let URLString = CloudHospitalClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Bool>.Type = CloudHospitalClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get ServiceCategory.
     
     - parameter serviceCategoryId: (path)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiV1ServicecategoriesServiceCategoryIdGet(serviceCategoryId: UUID, apiResponseQueue: DispatchQueue = CloudHospitalClientAPI.apiResponseQueue, completion: @escaping ((_ data: ServiceCategoryViewModel?,_ error: Error?) -> Void)) {
        apiV1ServicecategoriesServiceCategoryIdGetWithRequestBuilder(serviceCategoryId: serviceCategoryId).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get ServiceCategory.
     - GET /api/v1/servicecategories/{serviceCategoryId}
     - Sample request:        GET /api/v1/ServiceCategories/1
     - parameter serviceCategoryId: (path)  
     - returns: RequestBuilder<ServiceCategoryViewModel> 
     */
    open class func apiV1ServicecategoriesServiceCategoryIdGetWithRequestBuilder(serviceCategoryId: UUID) -> RequestBuilder<ServiceCategoryViewModel> {
        var path = "/api/v1/servicecategories/{serviceCategoryId}"
        let serviceCategoryIdPreEscape = "\(APIHelper.mapValueToPathItem(serviceCategoryId))"
        let serviceCategoryIdPostEscape = serviceCategoryIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{serviceCategoryId}", with: serviceCategoryIdPostEscape, options: .literal, range: nil)
        let URLString = CloudHospitalClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<ServiceCategoryViewModel>.Type = CloudHospitalClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Update ServiceCategory
     
     - parameter serviceCategoryId: (path)  
     - parameter updateServiceCategoryCommand: (body)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiV1ServicecategoriesServiceCategoryIdPut(serviceCategoryId: UUID, updateServiceCategoryCommand: UpdateServiceCategoryCommand? = nil, apiResponseQueue: DispatchQueue = CloudHospitalClientAPI.apiResponseQueue, completion: @escaping ((_ data: Bool?,_ error: Error?) -> Void)) {
        apiV1ServicecategoriesServiceCategoryIdPutWithRequestBuilder(serviceCategoryId: serviceCategoryId, updateServiceCategoryCommand: updateServiceCategoryCommand).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Update ServiceCategory
     - PUT /api/v1/servicecategories/{serviceCategoryId}
     - Sample request:        PUT /api/v1/ServiceCategories/1      {          \"name\": \"Adults\",          \"description\": \"There are so many “-ologists“ that they can be hard to keep straight. However, this list could be a handy reference. This is not meant to be an exhaustive and all-inclusive list of what a specialist does, but it should provide you with a basic overview.\"      }
     - OAuth:
       - type: oauth2
       - name: oauth2
     - parameter serviceCategoryId: (path)  
     - parameter updateServiceCategoryCommand: (body)  (optional)
     - returns: RequestBuilder<Bool> 
     */
    open class func apiV1ServicecategoriesServiceCategoryIdPutWithRequestBuilder(serviceCategoryId: UUID, updateServiceCategoryCommand: UpdateServiceCategoryCommand? = nil) -> RequestBuilder<Bool> {
        var path = "/api/v1/servicecategories/{serviceCategoryId}"
        let serviceCategoryIdPreEscape = "\(APIHelper.mapValueToPathItem(serviceCategoryId))"
        let serviceCategoryIdPostEscape = serviceCategoryIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{serviceCategoryId}", with: serviceCategoryIdPostEscape, options: .literal, range: nil)
        let URLString = CloudHospitalClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: updateServiceCategoryCommand)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Bool>.Type = CloudHospitalClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
}
