//
// DoctorSpecialtiesAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

extension CloudHospitalClientAPI {


open class DoctorSpecialtiesAPI {
    /**
     Link a doctor to a specialty.
     
     - parameter doctorId: (path)  
     - parameter specialtyId: (path)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiV1DoctorsDoctorIdSpecialtySpecialtyIdPost(doctorId: UUID, specialtyId: UUID, apiResponseQueue: DispatchQueue = CloudHospitalClientAPI.apiResponseQueue, completion: @escaping ((_ data: DoctorSpecialtyViewModel?,_ error: Error?) -> Void)) {
        apiV1DoctorsDoctorIdSpecialtySpecialtyIdPostWithRequestBuilder(doctorId: doctorId, specialtyId: specialtyId).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Link a doctor to a specialty.
     - POST /api/v1/doctors/{doctorId}/specialty/{specialtyId}
     - Sample request:        POST /api/v1/doctors/1/specialty/1
     - OAuth:
       - type: oauth2
       - name: oauth2
     - parameter doctorId: (path)  
     - parameter specialtyId: (path)  
     - returns: RequestBuilder<DoctorSpecialtyViewModel> 
     */
    open class func apiV1DoctorsDoctorIdSpecialtySpecialtyIdPostWithRequestBuilder(doctorId: UUID, specialtyId: UUID) -> RequestBuilder<DoctorSpecialtyViewModel> {
        var path = "/api/v1/doctors/{doctorId}/specialty/{specialtyId}"
        let doctorIdPreEscape = "\(APIHelper.mapValueToPathItem(doctorId))"
        let doctorIdPostEscape = doctorIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{doctorId}", with: doctorIdPostEscape, options: .literal, range: nil)
        let specialtyIdPreEscape = "\(APIHelper.mapValueToPathItem(specialtyId))"
        let specialtyIdPostEscape = specialtyIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{specialtyId}", with: specialtyIdPostEscape, options: .literal, range: nil)
        let URLString = CloudHospitalClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<DoctorSpecialtyViewModel>.Type = CloudHospitalClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Remove link between the doctor and the specialty.
     
     - parameter doctorId: (path)  
     - parameter specailtyId: (path)  
     - parameter hospitalId: (path)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiV1DoctorsHospitalIdDoctorsDoctorIdDelete(doctorId: UUID, specailtyId: UUID, hospitalId: String, apiResponseQueue: DispatchQueue = CloudHospitalClientAPI.apiResponseQueue, completion: @escaping ((_ data: Bool?,_ error: Error?) -> Void)) {
        apiV1DoctorsHospitalIdDoctorsDoctorIdDeleteWithRequestBuilder(doctorId: doctorId, specailtyId: specailtyId, hospitalId: hospitalId).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Remove link between the doctor and the specialty.
     - DELETE /api/v1/doctors/{hospitalId}/doctors/{doctorId}
     - Sample request:        DELETE /api/v1/doctors/1/specialty/1
     - OAuth:
       - type: oauth2
       - name: oauth2
     - parameter doctorId: (path)  
     - parameter specailtyId: (path)  
     - parameter hospitalId: (path)  
     - returns: RequestBuilder<Bool> 
     */
    open class func apiV1DoctorsHospitalIdDoctorsDoctorIdDeleteWithRequestBuilder(doctorId: UUID, specailtyId: UUID, hospitalId: String) -> RequestBuilder<Bool> {
        var path = "/api/v1/doctors/{hospitalId}/doctors/{doctorId}"
        let doctorIdPreEscape = "\(APIHelper.mapValueToPathItem(doctorId))"
        let doctorIdPostEscape = doctorIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{doctorId}", with: doctorIdPostEscape, options: .literal, range: nil)
        let specailtyIdPreEscape = "\(APIHelper.mapValueToPathItem(specailtyId))"
        let specailtyIdPostEscape = specailtyIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{specailtyId}", with: specailtyIdPostEscape, options: .literal, range: nil)
        let hospitalIdPreEscape = "\(APIHelper.mapValueToPathItem(hospitalId))"
        let hospitalIdPostEscape = hospitalIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{hospitalId}", with: hospitalIdPostEscape, options: .literal, range: nil)
        let URLString = CloudHospitalClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Bool>.Type = CloudHospitalClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
}
