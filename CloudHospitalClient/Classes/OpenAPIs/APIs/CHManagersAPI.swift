//
// CHManagersAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

extension CloudHospitalClientAPI {


open class CHManagersAPI {
    /**
     Delete cloud hospital manager.
     
     - parameter chManagerId: (path)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiV1ChmanagersChManagerIdDelete(chManagerId: UUID, apiResponseQueue: DispatchQueue = CloudHospitalClientAPI.apiResponseQueue, completion: @escaping ((_ data: Bool?,_ error: Error?) -> Void)) {
        apiV1ChmanagersChManagerIdDeleteWithRequestBuilder(chManagerId: chManagerId).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Delete cloud hospital manager.
     - DELETE /api/v1/chmanagers/{chManagerId}
     - Smaple request:        DELETE /api/v1/chmanagers/1
     - OAuth:
       - type: oauth2
       - name: oauth2
     - parameter chManagerId: (path)  
     - returns: RequestBuilder<Bool> 
     */
    open class func apiV1ChmanagersChManagerIdDeleteWithRequestBuilder(chManagerId: UUID) -> RequestBuilder<Bool> {
        var path = "/api/v1/chmanagers/{chManagerId}"
        let chManagerIdPreEscape = "\(APIHelper.mapValueToPathItem(chManagerId))"
        let chManagerIdPostEscape = chManagerIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{chManagerId}", with: chManagerIdPostEscape, options: .literal, range: nil)
        let URLString = CloudHospitalClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Bool>.Type = CloudHospitalClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get cloud hospital manager.
     
     - parameter managerId: (path)  
     - parameter chManagerId: (path)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiV1ChmanagersChManagerIdGet(managerId: UUID, chManagerId: String, apiResponseQueue: DispatchQueue = CloudHospitalClientAPI.apiResponseQueue, completion: @escaping ((_ data: CHManagerViewModel?,_ error: Error?) -> Void)) {
        apiV1ChmanagersChManagerIdGetWithRequestBuilder(managerId: managerId, chManagerId: chManagerId).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get cloud hospital manager.
     - GET /api/v1/chmanagers/{chManagerId}
     - Sample request:        GET /api/v1/chmanagers/1
     - OAuth:
       - type: oauth2
       - name: oauth2
     - parameter managerId: (path)  
     - parameter chManagerId: (path)  
     - returns: RequestBuilder<CHManagerViewModel> 
     */
    open class func apiV1ChmanagersChManagerIdGetWithRequestBuilder(managerId: UUID, chManagerId: String) -> RequestBuilder<CHManagerViewModel> {
        var path = "/api/v1/chmanagers/{chManagerId}"
        let managerIdPreEscape = "\(APIHelper.mapValueToPathItem(managerId))"
        let managerIdPostEscape = managerIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{managerId}", with: managerIdPostEscape, options: .literal, range: nil)
        let chManagerIdPreEscape = "\(APIHelper.mapValueToPathItem(chManagerId))"
        let chManagerIdPostEscape = chManagerIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{chManagerId}", with: chManagerIdPostEscape, options: .literal, range: nil)
        let URLString = CloudHospitalClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<CHManagerViewModel>.Type = CloudHospitalClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Update cloud hospital manager.
     
     - parameter chManagerId: (path)  
     - parameter updateCHManagerCommand: (body)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiV1ChmanagersChManagerIdPut(chManagerId: UUID, updateCHManagerCommand: UpdateCHManagerCommand? = nil, apiResponseQueue: DispatchQueue = CloudHospitalClientAPI.apiResponseQueue, completion: @escaping ((_ data: Bool?,_ error: Error?) -> Void)) {
        apiV1ChmanagersChManagerIdPutWithRequestBuilder(chManagerId: chManagerId, updateCHManagerCommand: updateCHManagerCommand).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Update cloud hospital manager.
     - PUT /api/v1/chmanagers/{chManagerId}
     - Sample request:        PUT /api/v1/chmanagers/1      {          \"firstName\": \"cloud\",          \"lastName\": \"manager\",          \"photo\": \"string\",          \"locations\": [          {              \"locationType\": \"LivesIn\",              \"latitude\": 0,              \"longitude\": 0,              \"country\": \"string\",              \"state\": \"string\",              \"county\": \"string\",              \"city\": \"string\",              \"zipCode\": \"string\",              \"address\": \"string\"              }          ]      }
     - OAuth:
       - type: oauth2
       - name: oauth2
     - parameter chManagerId: (path)  
     - parameter updateCHManagerCommand: (body)  (optional)
     - returns: RequestBuilder<Bool> 
     */
    open class func apiV1ChmanagersChManagerIdPutWithRequestBuilder(chManagerId: UUID, updateCHManagerCommand: UpdateCHManagerCommand? = nil) -> RequestBuilder<Bool> {
        var path = "/api/v1/chmanagers/{chManagerId}"
        let chManagerIdPreEscape = "\(APIHelper.mapValueToPathItem(chManagerId))"
        let chManagerIdPostEscape = chManagerIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{chManagerId}", with: chManagerIdPostEscape, options: .literal, range: nil)
        let URLString = CloudHospitalClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: updateCHManagerCommand)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Bool>.Type = CloudHospitalClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Get cloud hospital managers.
     
     - parameter id: (query)  (optional)
     - parameter fullname: (query)  (optional)
     - parameter email: (query)  (optional)
     - parameter gender: (query)  (optional)
     - parameter dateOfBirth: (query)  (optional)
     - parameter created: (query)  (optional)
     - parameter page: (query)  (optional)
     - parameter limit: (query)  (optional)
     - parameter lastRetrieved: (query)  (optional)
     - parameter current: (query)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiV1ChmanagersGet(id: UUID? = nil, fullname: String? = nil, email: String? = nil, gender: Gender? = nil, dateOfBirth: Date? = nil, created: Date? = nil, page: Int? = nil, limit: Int? = nil, lastRetrieved: Date? = nil, current: Bool? = nil, apiResponseQueue: DispatchQueue = CloudHospitalClientAPI.apiResponseQueue, completion: @escaping ((_ data: CHManagersViewModel?,_ error: Error?) -> Void)) {
        apiV1ChmanagersGetWithRequestBuilder(id: id, fullname: fullname, email: email, gender: gender, dateOfBirth: dateOfBirth, created: created, page: page, limit: limit, lastRetrieved: lastRetrieved, current: current).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get cloud hospital managers.
     - GET /api/v1/chmanagers
     - Sample request:        GET /api/v1/chmanagers      {          \"pageQueryFilter\": {              \"page\": 1,              \"limit\": 20,              \"lastRetrived\": \"2020-02-05T08:40\"          },          \"searchString\": \"chmanager\"      }
     - OAuth:
       - type: oauth2
       - name: oauth2
     - parameter id: (query)  (optional)
     - parameter fullname: (query)  (optional)
     - parameter email: (query)  (optional)
     - parameter gender: (query)  (optional)
     - parameter dateOfBirth: (query)  (optional)
     - parameter created: (query)  (optional)
     - parameter page: (query)  (optional)
     - parameter limit: (query)  (optional)
     - parameter lastRetrieved: (query)  (optional)
     - parameter current: (query)  (optional)
     - returns: RequestBuilder<CHManagersViewModel> 
     */
    open class func apiV1ChmanagersGetWithRequestBuilder(id: UUID? = nil, fullname: String? = nil, email: String? = nil, gender: Gender? = nil, dateOfBirth: Date? = nil, created: Date? = nil, page: Int? = nil, limit: Int? = nil, lastRetrieved: Date? = nil, current: Bool? = nil) -> RequestBuilder<CHManagersViewModel> {
        let path = "/api/v1/chmanagers"
        let URLString = CloudHospitalClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "Id": id?.encodeToJSON(), 
            "Fullname": fullname?.encodeToJSON(), 
            "Email": email?.encodeToJSON(), 
            "Gender": gender?.encodeToJSON(), 
            "DateOfBirth": dateOfBirth?.encodeToJSON(), 
            "Created": created?.encodeToJSON(), 
            "page": page?.encodeToJSON(), 
            "limit": limit?.encodeToJSON(), 
            "lastRetrieved": lastRetrieved?.encodeToJSON(), 
            "Current": current?.encodeToJSON()
        ])

        let requestBuilder: RequestBuilder<CHManagersViewModel>.Type = CloudHospitalClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Create cloud hospital manager.
     
     - parameter createCHManagerCommand: (body)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiV1ChmanagersPost(createCHManagerCommand: CreateCHManagerCommand? = nil, apiResponseQueue: DispatchQueue = CloudHospitalClientAPI.apiResponseQueue, completion: @escaping ((_ data: UUID?,_ error: Error?) -> Void)) {
        apiV1ChmanagersPostWithRequestBuilder(createCHManagerCommand: createCHManagerCommand).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Create cloud hospital manager.
     - POST /api/v1/chmanagers
     - Sample request:        POST /api/v1/chmanagers      {          \"userName\": \"chmanager\",          \"email\": \"chmanger@icloudhospital.com\",          \"firstName\": \"cloud\",          \"lastName\": \"manager\",          \"photo\": \"string\",          \"photoThumbnail\": \"string\",          \"gender\": \"NotSpecified\",          \"dateOfBirth\": \"2020-02-22T15:28:09.897Z\",          \"locations\": [             {             \"locationType\": \"LivesIn\",             \"latitude\": 0,             \"longitude\": 0,             \"country\": \"string\",             \"state\": \"string\",             \"county\": \"string\",             \"city\": \"string\",             \"zipCode\": \"string\",             \"address\": \"string\"             }          ]       }
     - OAuth:
       - type: oauth2
       - name: oauth2
     - parameter createCHManagerCommand: (body)  (optional)
     - returns: RequestBuilder<UUID> 
     */
    open class func apiV1ChmanagersPostWithRequestBuilder(createCHManagerCommand: CreateCHManagerCommand? = nil) -> RequestBuilder<UUID> {
        let path = "/api/v1/chmanagers"
        let URLString = CloudHospitalClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: createCHManagerCommand)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<UUID>.Type = CloudHospitalClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
}
