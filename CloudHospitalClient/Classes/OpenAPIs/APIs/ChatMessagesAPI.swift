//
// ChatMessagesAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(Combine)
import Combine
#endif

open class ChatMessagesAPI {
    /**

     - parameter sendFileRequestModel: (body)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - returns: AnyPublisher<Bool, Error>
     */
    #if canImport(Combine)
    @available(OSX 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func apiV1ChatmessagesFilesPost(sendFileRequestModel: SendFileRequestModel? = nil, apiResponseQueue: DispatchQueue = CloudHospitalClientAPI.apiResponseQueue) -> AnyPublisher<Bool, Error> {
        return Future<Bool, Error>.init { promise in
            apiV1ChatmessagesFilesPostWithRequestBuilder(sendFileRequestModel: sendFileRequestModel).execute(apiResponseQueue) { result -> Void in
                switch result {
                case let .success(response):
                    promise(.success(response.body!))
                case let .failure(error):
                    promise(.failure(error))
                }
            }
        }.eraseToAnyPublisher()
    }
    #endif

    /**
     - POST /api/v1/chatmessages/files
     - OAuth:
       - type: oauth2
       - name: oauth2
     - parameter sendFileRequestModel: (body)  (optional)
     - returns: RequestBuilder<Bool> 
     */
    open class func apiV1ChatmessagesFilesPostWithRequestBuilder(sendFileRequestModel: SendFileRequestModel? = nil) -> RequestBuilder<Bool> {
        let path = "/api/v1/chatmessages/files"
        let URLString = CloudHospitalClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: sendFileRequestModel)

        let url = URLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            :
        ]

        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Bool>.Type = CloudHospitalClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, headers: headerParameters)
    }

}
