//
// AppVersionAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import Combine



open class AppVersionAPI {
    /**

     - parameter platform: (path)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - returns: AnyPublisher<AppVersionModel, Error>
     */
    @available(OSX 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func apiV2AppversionPlatformGet(platform: Platform, apiResponseQueue: DispatchQueue = CloudHospitalClientAPI.apiResponseQueue) -> AnyPublisher<AppVersionModel, Error> {
        return Future<AppVersionModel, Error>.init { promise in
            apiV2AppversionPlatformGetWithRequestBuilder(platform: platform).execute(apiResponseQueue) { result -> Void in
                switch result {
                case let .success(response):
                    promise(.success(response.body!))
                case let .failure(error):
                    promise(.failure(error))
                }
            }
        }.eraseToAnyPublisher()
    }

    /**
     - GET /api/v2/appversion/{platform}
     - parameter platform: (path)  
     - returns: RequestBuilder<AppVersionModel> 
     */
    open class func apiV2AppversionPlatformGetWithRequestBuilder(platform: Platform) -> RequestBuilder<AppVersionModel> {
        var path = "/api/v2/appversion/{platform}"
        let platformPreEscape = "\(APIHelper.mapValueToPathItem(platform))"
        let platformPostEscape = platformPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{platform}", with: platformPostEscape, options: .literal, range: nil)
        let URLString = CloudHospitalClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<AppVersionModel>.Type = CloudHospitalClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
